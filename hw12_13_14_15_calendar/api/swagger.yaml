basePath: /
definitions:
  dto.EventData:
    properties:
      description:
        type: string
      endTime:
        type: string
      id:
        type: string
      startTime:
        type: string
      title:
        type: string
      userId:
        type: string
    type: object
  dto.NotificationData:
    properties:
      eventId:
        type: string
      id:
        type: string
      message:
        type: string
      sent:
        type: boolean
      time:
        type: string
      userId:
        type: string
    type: object
  internalhttp.ErrorResponseWrapper:
    properties:
      errors:
        items:
          type: string
        type: array
      requestId:
        type: string
      status:
        type: integer
    type: object
  internalhttp.EventListResponseWrapper:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.EventData'
        type: array
      errors:
        items:
          type: string
        type: array
      requestId:
        type: string
      status:
        type: integer
    type: object
  internalhttp.EventResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/dto.EventData'
      errors:
        items:
          type: string
        type: array
      requestId:
        type: string
      status:
        type: integer
    type: object
  internalhttp.NotificationListResponseWrapper:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.NotificationData'
        type: array
      errors:
        items:
          type: string
        type: array
      requestId:
        type: string
      status:
        type: integer
    type: object
  internalhttp.NotificationResponseWrapper:
    properties:
      data:
        $ref: '#/definitions/dto.NotificationData'
      errors:
        items:
          type: string
        type: array
      requestId:
        type: string
      status:
        type: integer
    type: object
  internalhttp.Response:
    properties:
      data: {}
      errors:
        items:
          type: string
        type: array
      requestId:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Это простой API для управления событиями календаря.
  title: API Календаря
  version: "1.0"
paths:
  /events:
    get:
      consumes:
      - application/json
      description: Получает список событий между указанными датами
      parameters:
      - description: Время начала
        in: query
        name: startTime
        required: true
        type: string
      - description: Время окончания
        in: query
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.EventListResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Список событий
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Создает новое событие
      parameters:
      - description: Запрос на создание события
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dto.EventData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Создать событие
      tags:
      - events
  /events/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет существующее событие
      parameters:
      - description: ID события
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Удалить событие
      tags:
      - events
    get:
      consumes:
      - application/json
      description: Получает событие по ID
      parameters:
      - description: ID события
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.EventResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Получить событие
      tags:
      - events
    put:
      consumes:
      - application/json
      description: Обновляет существующее событие
      parameters:
      - description: ID события
        in: path
        name: id
        required: true
        type: string
      - description: Запрос на обновление события
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dto.EventData'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Обновить событие
      tags:
      - events
  /events/day:
    get:
      consumes:
      - application/json
      description: Получает список событий на указанный день
      parameters:
      - description: Дата
        example: "2024-07-24"
        format: date
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.EventListResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Список событий на указанный день
      tags:
      - events
  /events/month:
    get:
      consumes:
      - application/json
      description: Получает список событий на указанный месяц
      parameters:
      - description: Дата начала месяца
        example: "2024-07-01"
        format: date
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.EventListResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Список событий на указанный месяц
      tags:
      - events
  /events/week:
    get:
      consumes:
      - application/json
      description: Получает список событий на указанную неделю
      parameters:
      - description: Дата начала недели
        example: "2024-07-22"
        format: date
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.EventListResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Список событий на указанную неделю
      tags:
      - events
  /health:
    get:
      consumes:
      - application/json
      description: Проверяет состояние сервиса
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Проверка состояния здоровья
      tags:
      - health
  /notifications:
    get:
      consumes:
      - application/json
      description: Получает список уведомлений между указанными датами
      parameters:
      - description: Время начала
        in: query
        name: start_time
        required: true
        type: string
      - description: Время окончания
        in: query
        name: end_time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.NotificationListResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Список уведомлений
      tags:
      - notifications
    post:
      consumes:
      - application/json
      description: Создает новое уведомление
      parameters:
      - description: Запрос на создание уведомления
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/dto.NotificationData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Создать уведомление
      tags:
      - notifications
  /notifications/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет существующее уведомление
      parameters:
      - description: ID уведомления
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Удалить уведомление
      tags:
      - notifications
    get:
      consumes:
      - application/json
      description: Получает уведомление по ID
      parameters:
      - description: ID уведомления
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internalhttp.NotificationResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Получить уведомление
      tags:
      - notifications
    put:
      consumes:
      - application/json
      description: Обновляет существующее уведомление
      parameters:
      - description: ID уведомления
        in: path
        name: id
        required: true
        type: string
      - description: Запрос на обновление уведомления
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/dto.NotificationData'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/internalhttp.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internalhttp.ErrorResponseWrapper'
      summary: Обновить уведомление
      tags:
      - notifications
swagger: "2.0"
