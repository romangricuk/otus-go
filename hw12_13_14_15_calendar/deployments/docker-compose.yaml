services:
  db:
    image: postgres:16-alpine
    container_name: calendar_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready --username=${DB_USER} --dbname=${DB_NAME}"
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "15672:15672" # Порт для RabbitMQ Management UI
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  migrate:
    build:
      context: ..
      dockerfile: build/Dockerfile.calendar-app
    container_name: migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ../configs:/etc/calendar/configs
      - ../migrations:/migrations
    entrypoint: [ "/usr/local/bin/calendar-app", "-config", "/etc/calendar/configs/config.yaml", "--command=migrate_up", "--migrations=/migrations" ]
    command: [ "echo", "Migrations Complete" ]

  calendar_app:
    build:
      context: ..
      dockerfile: build/Dockerfile.calendar-app
    container_name: calendar_app
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - GRPC_PORT=${GRPC_PORT}
    ports:
      - "8080:8080"
    volumes:
      - ../configs:/etc/calendar/configs
    command: [ "/usr/local/bin/calendar-app", "-config", "/etc/calendar/configs/config.yaml" ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  calendar_scheduler:
    build:
      context: ..
      dockerfile: build/Dockerfile.calendar-scheduler
    container_name: calendar_scheduler
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    volumes:
      - ../configs:/etc/calendar/configs
    entrypoint: [ "/usr/local/bin/calendar-scheduler", "-config", "/etc/calendar/configs/config.yaml" ]

  calendar_sender:
    build:
      context: ..
      dockerfile: build/Dockerfile.calendar-sender
    container_name: calendar_sender
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
      - EMAIL_SMTP_SERVER=${EMAIL_SMTP_SERVER}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_INSECURE_SKIP_VERIFY=${EMAIL_INSECURE_SKIP_VERIFY}
    volumes:
      - ../configs:/etc/calendar/configs
    entrypoint: [ "/usr/local/bin/calendar-sender", "-config", "/etc/calendar/configs/config.yaml" ]

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "${EMAIL_SMTP_PORT}:1025"
      - "${MAILHOG_WEB_PORT}:8025"
    networks:
      - default

  integration_tests:
    profiles:
      - tests
    build:
      context: ..
      dockerfile: build/Dockerfile.tests
    depends_on:
      calendar_app:
        condition: service_started
    environment:
      GRPC_ADDRESS: calendar_app:${GRPC_PORT}
    volumes:
      - ../integrationtests:/app/integrationtests
      - ../api:/app/api
    command: [ "go", "test", "-v", "./integrationtests/..." ]

volumes:
  db-data:
